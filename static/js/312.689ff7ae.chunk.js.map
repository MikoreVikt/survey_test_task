{"version":3,"file":"static/js/312.689ff7ae.chunk.js","mappings":"4NAKaA,EAAc,WACzB,IAAMC,GAAeC,EAAAA,EAAAA,IAAYC,EAAAA,IAC3BC,GAASF,EAAAA,EAAAA,IAAYG,EAAAA,IAEvBC,EAAU,GACdA,EAC4BA,GAAT,IAAjBL,EAAoCG,EAAOE,QAAsB,GACnE,IAAIC,EAAQ,GACZA,EAAkCA,GAAT,IAAjBN,EAAkCG,EAAOI,SAAqB,GAiCtE,OACE,oCA9BcC,IAAZH,EACIA,EAAQI,KAAI,SAAAC,GACV,OAAOA,EAAID,KAAI,YAAyC,IAAtCE,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,OACpCC,EAAOT,EAAMU,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAQP,CAAhB,IAQzB,MAAO,CAAEI,KALPA,OADWP,IAATO,EACK,QAEAA,EAAKR,SAGCI,MAAAA,EAAOC,SAAAA,EAAUC,MAAAA,EAAOC,OAAAA,EACxC,GACF,IACD,CACE,CACE,CACEC,KAAM,OACNJ,MAAO,QACPC,SAAU,WACVC,MAAO,QACPC,OAAQ,aAUFL,KAAI,SAAAC,GAAG,OACrBA,EAAID,KAAI,YAA+C,IAA5CM,EAA2C,EAA3CA,KAAMJ,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,OACvC,OACE,2BACE,SAAC,EAAAK,GAAD,UAAKJ,KACL,SAAC,EAAAI,GAAD,UAAKP,KACL,SAAC,EAAAO,GAAD,UAAKN,KACL,SAAC,EAAAM,GAAD,UAAKL,MAJEH,EAOZ,GAVoB,KAc5B,EChCD,EAxB6B,WAG3B,OAFqBV,EAAAA,EAAAA,IAAYC,EAAAA,KAG/B,SAACkB,EAAA,EAAD,KAEA,SAAC,IAAD,WACE,UAAC,IAAD,YACE,4BACE,2BACE,SAAC,EAAAC,GAAD,UAAI,cACJ,SAAC,EAAAA,GAAD,UAAI,cACJ,SAAC,EAAAA,GAAD,UAAI,WACJ,SAAC,EAAAA,GAAD,UAAI,iBAGR,4BACE,SAACtB,EAAD,UAKT,C,6JC1BYuB,EAAeC,EAAAA,GAAAA,QAAH,yJASZC,EAAQD,EAAAA,GAAAA,MAAH,qOAcLF,EAAKE,EAAAA,GAAAA,GAAH,0LAYFJ,EAAKI,EAAAA,GAAAA,GAAH,oJ,wGCrCR,IAAME,EAAoB,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,kBAAhB,EAEzBxB,EAAqB,SAAAsB,GAAK,OAAIA,EAAMC,MAAME,mBAAhB,EAE1B3B,EAAqB,SAAAwB,GAAK,OAAIA,EAAMC,MAAM3B,YAAhB,C","sources":["components/Tables/SecondTable.jsx","components/SurveysResults/SecondSurveysResults.jsx","components/SurveysResults/SurveysResults.styled.jsx","redux/adminRedux/selectors.js"],"sourcesContent":["import { TD } from '../SurveysResults/SurveysResults.styled';\nimport { useSelector } from 'react-redux';\nimport { selectResIsLoading } from 'redux/adminRedux/selectors';\nimport { selectSecondResult } from 'redux/adminRedux/selectors';\n\nexport const SecondTable = () => {\n  const resIsLoading = useSelector(selectResIsLoading);\n  const result = useSelector(selectSecondResult);\n\n  let answers = [];\n  answers =\n    resIsLoading === false ? (answers = result.answers) : (answers = []);\n  let names = [];\n  names = resIsLoading === false ? (names = result.username) : (names = []);\n\n  const handleHelper = () => {\n    let mappedAnswers =\n      answers !== undefined\n        ? answers.map(arr => {\n            return arr.map(({ owner, position, stack, salary }) => {\n              let name = names.find(obj => obj._id === owner);\n\n              if (name === undefined) {\n                name = 'GUEST';\n              } else {\n                name = name.username;\n              }\n\n              return { name, owner, position, stack, salary };\n            });\n          })\n        : [\n            [\n              {\n                name: 'Name',\n                owner: 'Owner',\n                position: 'Position',\n                stack: 'Stack',\n                salary: 'Salary',\n              },\n            ],\n          ];\n\n    return mappedAnswers;\n  };\n\n  return (\n    <>\n      {handleHelper().map(arr =>\n        arr.map(({ name, owner, position, stack, salary }) => {\n          return (\n            <tr key={owner}>\n              <TD>{name}</TD>\n              <TD>{position}</TD>\n              <TD>{stack}</TD>\n              <TD>{salary}</TD>\n            </tr>\n          );\n        })\n      )}\n    </>\n  );\n};\n","import { TableWrapper, TABLE, TH } from './SurveysResults.styled';\nimport { useSelector } from 'react-redux';\nimport { selectResIsLoading } from 'redux/adminRedux/selectors';\nimport { Loader } from 'components/Loader/Loader';\nimport { SecondTable } from 'components/Tables/SecondTable';\n\nconst SecondSurveysResults = () => {\n  const resIsLoading = useSelector(selectResIsLoading);\n\n  return resIsLoading ? (\n    <Loader />\n  ) : (\n    <TableWrapper>\n      <TABLE>\n        <thead>\n          <tr>\n            <TH>Username</TH>\n            <TH>Position</TH>\n            <TH>Stack</TH>\n            <TH>Salary</TH>\n          </tr>\n        </thead>\n        <tbody>\n          <SecondTable />\n        </tbody>\n      </TABLE>\n    </TableWrapper>\n  );\n};\n\nexport default SecondSurveysResults;\n","import styled from 'styled-components';\n\nexport const TableWrapper = styled.section`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  max-width: 80%;\n  margin: 50px auto;\n  padding: 50px;\n`;\n\nexport const TABLE = styled.table`\n  text-indent: 20px;\n  font-size: 20px;\n  font-weight: 500;\n\n  @media screen and (max-width: 768px) {\n    text-indent: 0;\n  }\n\n  @media screen and (max-width: 480px) {\n    font-weight: 400;\n  }\n`;\n\nexport const TH = styled.th`\n  font-size: 20px;\n  padding: 0 20px;\n  color: white;\n  opacity: 0.7;\n\n  @media screen and (max-width: 768px) {\n    font-size: 16px;\n    padding: 0;\n  }\n`;\n\nexport const TD = styled.td`\n  padding: 0 20px;\n  color: white;\n  opacity: 0.7;\n\n  @media screen and (max-width: 768px) {\n    font-size: 16px;\n  }\n`;\n","export const selectFirstResult = state => state.admin.firstPartOfResults;\n\nexport const selectSecondResult = state => state.admin.secondPartOfResults;\n\nexport const selectResIsLoading = state => state.admin.resIsLoading;\n\nexport const selectResIsError = state => state.admin.error;\n"],"names":["SecondTable","resIsLoading","useSelector","selectResIsLoading","result","selectSecondResult","answers","names","username","undefined","map","arr","owner","position","stack","salary","name","find","obj","_id","TD","Loader","TH","TableWrapper","styled","TABLE","selectFirstResult","state","admin","firstPartOfResults","secondPartOfResults"],"sourceRoot":""}